'SOME LITTLE CORE PARTS OF RAYCASTING CODE ARE ORIGINALLY FROM LABDEMO.BAS
'MODIFIED ON 10/14/1999 BY KEN SILVERMAN FOR RENDERING CLEANLINESS
'MODIFIED ON 2020 FOR WOLFENSTEIN 3D CMM2 PORT BY MAURO XAVIER

#INCLUDE "OPTIONS.INC"
#INCLUDE "SCREEN_FX.INC"
#INCLUDE "MAP_LOADER.INC"
#INCLUDE "DOORS.INC"
#INCLUDE "PLAYER_COLLISION.INC"
#INCLUDE "STAGE_CLEAR.INC"
#INCLUDE "ENEMIES.INC"
#INCLUDE "OBJECTS.INC"
#INCLUDE "SOUND.INC"

CLEAR

OPTION BASE 0

'WORLD MAP: 0-WALLS, 1-OBJ, 2-DOORS, 3-SIDES OF DOORS
DIM MAPW(66,66),MAPO(66,66),MAPD(66,66),MAPS(66,66)

'DOORS -- ACTIVATED? | X/Y COORDINATES | TIME COUNTER | TYPE | SECRET WALL RUN SIDE 
DIM INTEGER DOOR(20),X_DOOR(20),Y_DOOR(20),DOOR_TIME(20),T_DOOR(20),XS_DOOR(20),YS_DOOR(20)

'OBJECTS / ENEMIES -- X/Y COORDINATES
DIM X_OBJ(400),Y_OBJ(400)

'OBJECTS / ENEMIES -- TYPE | ANIMATION | ACTION | ENEMY ENERGY
DIM INTEGER T_OBJ(400),ANI_OBJ(400),ACT_OBJ(400),ENE_OBJ(400)

'FAKE Z BUFFER CUT 
DIM Z_OBJ(340)

'MENU OPTIONS | DISPONIBLE WEAPON
DIM INTEGER OPTC(10),ON_WEAPON(3)

TOUGH=3
DEBUG=0         'DEBUG MODE
S_FPS=0         'SHOW FPS

ZOOM       = 0  'ZOOM WINDOW
DETAIL     =-1  'AUTO DETAIL LEVEL
SC_SIZE    = 0  'SCREEN SIZE
SFX_SND    = 2  'SOUND EFFECTS?
MUSIC_BKG  = 2  'BACKGROUND MUSIC?
ON_OPTIONS = 0  'BACKING FROM THE GAME OPTIONS INSIDE THE GAME?

'WANT TO START DIRECTLY TO TEST SOMETHING?
'GOTO START_GAME
GOTO GAME_OPTIONS


'-- RESET ARRAYS --

SUB RESET_ARRAYS

 LOCAL T,X,Y

 'WORLD MAP: 0-WALLS, 1-OBJ, 2-DOORS, 3-SIDES OF DOORS
 ERASE MAPW,MAPO,MAPD,MAPS
 DIM MAPW(66,66),MAPO(66,66),MAPD(66,66),MAPS(66,66)

 'DOORS -- ACTIVATED? | X/Y COORDINATES | TIME COUNTER | TYPE | SECRET WALL RUN SIDE 
 ERASE DOOR,X_DOOR,Y_DOOR,DOOR_TIME,T_DOOR,XS_DOOR,YS_DOOR
 DIM INTEGER DOOR(20),X_DOOR(20),Y_DOOR(20),DOOR_TIME(20),T_DOOR(20),XS_DOOR(20),YS_DOOR(20)

 'OBJECTS / ENEMIES -- X/Y COORDINATES
 RASE X_OBJ,Y_OBJ
 DIM X_OBJ(400),Y_OBJ(400)

 'OBJECTS / ENEMIES -- TYPE | ANIMATION | ACTION | ENEMY ENERGY
 ERASE T_OBJ,ANI_OBJ,ACT_OBJ,ENE_OBJ
 DIM INTEGER T_OBJ(400),ANI_OBJ(400),ACT_OBJ(400),ENE_OBJ(400)

 'FAKE Z BUFFER CUT 
 ERASE Z_OBJ
 DIM Z_OBJ(340)

 'MENU OPTIONS | DISPONIBLE WEAPON
 ERASE OPTC
 DIM INTEGER OPTC(10)

 FOR X=0 TO 66
  FOR Y=0 TO 66
   MAPW(X,Y)=0: MAPO(X,Y)=0: MAPD(X,Y)=0: MAPS(X,Y)=0
 NEXT Y,X

 FOR T=0 TO 20
  DOOR(T)=0: X_DOOR(T)=0: Y_DOOR(T)=0: DOOR_TIME(T)=0: T_DOOR(T)=0: XS_DOOR(T)=0: YS_DOOR(T)=0
 NEXT T
 DOOR_OPENING=0

 FOR T=0 TO 400
  X_OBJ(T)=0: Y_OBJ(T)=0: T_OBJ(T)=0: ANI_OBJ(T)=0: ACT_OBJ(T)=0: ENE_OBJ(T)=0
 NEXT T

 FOR T=0 TO 340
  Z_OBJ(T)=200
 NEXT T

 FOR T=0 TO 10
  OPTC(T)=0
 NEXT T

END SUB


'--- RESTART / START GAME ---

GAME_OPTIONS:

MODE 3,12

ACT=1
IF ON_OPTIONS=0 THEN SCR_TYPE$="TITLE"

'PAGE 13 - BJ FACES + END STAGE ANIMATION
PAGE WRITE 13: CLS
LOAD PNG "./IMAGES/BJ.PNG"

'MANAGE TITLE SCREEN AND OPTIONS LOOP
DO WHILE ACT=1

 SELECT CASE SCR_TYPE$
  CASE "TITLE": TITLE_SCREEN
  CASE "OPTIONS": OPTIONS_SCREEN
  CASE "SOUND_OPTIONS": SOUND_OPTIONS_SCREEN
  CASE "CONTROLS": CONTROLS_SCREEN
  CASE "GRAPHIC_OPTIONS": GRAPHIC_OPTIONS_SCREEN
  CASE "CREDITS": CREDITS_SCREEN
  CASE "HIGHSCORES": HIGHSCORES_SCREEN
  CASE "EPISODES": EPISODES_SCREEN
  CASE "HOW_TOUGH": HOW_TOUGH_SCREEN
 END SELECT

LOOP


'------- START MAIN GAME -------

START_GAME:

'CHANGE TO 16-BIT MODE
MODE 3,16

'RESET ALL VIDEO PAGES
FOR T=0 TO 13: PAGE WRITE T: CLS: NEXT T

'INITIAL STATUS - BUT NOT WHEN BACKING FROM THE GAME OPTIONS
IF ON_OPTIONS=0 THEN
 SCORE  = 0
 LEVEL  = 1
 LIVES  = 3
ENDIF

'------- RESTART GAME / RESPAWN FROM DEAD -------

RESTART_LEVEL:

'NOT RESTART VARIABLES IF BACKING FROM THE GAME OPTIONS
IF ON_OPTIONS=0 THEN 

 'INITIAL STATUS
 HAPPY  = 0    'HAPPY FACE?
 HEALTH = 100  'PLAYER'S HEALTH
 WEAPON = 1    'INITIAL WEAPON (PISTOL)
 WSPR   = 3    'WEAPON SPRITE NUMBER
 AMMO   = 8    'INITIAL AMMO
 POSZ   = 0    'HEIGHT

 LEVEL=LEVEL-1 'RESTORE LEVEL NUMBER

 'RESET WEAPONS
 ON_WEAPON(0)=1
 ON_WEAPON(1)=1
 ON_WEAPON(2)=0
 ON_WEAPON(3)=0

ENDIF

'------- START A LEVEL / NEXT LEVEL -------

LEVEL_START:

PLAY STOP

'PAGE 0 - MAIN PAGE WITH PANEL
PAGE WRITE 0: CLS
LOAD PNG "./IMAGES/PANEL.PNG"
LOAD PNG "./IMAGES/GET_PSYCHED.PNG",48,55

PSYCHED_BAR(0) 

'PAGE 13 - BJ FACES + END STAGE ANIMATION + STATUS BAR FONTS
PAGE WRITE 13: CLS
LOAD PNG "./IMAGES/BJ.PNG"

'RESTORE STATUS BAR
PAGE WRITE 0
IF ON_OPTIONS=0 THEN LEVEL=LEVEL+1
REFRESH_STATUS_BAR
HEADMV=0: HEADTIME=10
BJ_HEAD(HEALTH,0)

PSYCHED_BAR(1)

PLAY STOP

FB_X=1538: FB_Y=390
FRAMEBUFFER CREATE FB_X,FB_Y
FRAMEBUFFER WRITE
LOAD BMP "./IMAGES/wolf.bmp"

PSYCHED_BAR(5)

IF MUSIC_BKG=2 THEN
 SELECT CASE (LEVEL MOD 3)
  CASE 1: PLAY MODFILE "./MUSICS/BATTLE_PLAN.MOD",22050
  CASE 2: PLAY MODFILE "./MUSICS/THE_WAR.MOD",22050
  CASE 3: PLAY MODFILE "./MUSICS/ALIENI_VOL_1.MOD",22050
  CASE 0: PLAY MODFILE "./MUSICS/PIRATE_ARMY_OF_DARKNESS.MOD",22050
 END SELECT
 'PLAY MODFILE "./MUSICS/KATAKOMB.MOD",22050
ENDIF

'PAGE 1 - MAIN BUFFER
PAGE WRITE 2: CLS

PSYCHED_BAR(2) 

'PAGE 10 - BROWN GUARD AND SS (FRONT ONLY VERSION)
PAGE WRITE 10: CLS
LOAD PNG "./IMAGES/GUARD_SS.PNG",,,1

PSYCHED_BAR(1)

IF LEVEL<>9 THEN
 'PAGE 11 - DOG AND OFFICER (FRONT ONLY VERSION)
 PAGE WRITE 11: CLS
 LOAD PNG "./IMAGES/DOG_OFFICER.PNG",,,1
ELSE
 'PAGE 11 - BOSS (FRONT ONLY VERSION)
 PAGE WRITE 11: CLS
 LOAD PNG "./IMAGES/BOSS1.PNG",,,1
ENDIF

PSYCHED_BAR(1)

'PAGE 12 - WEAPONS
PAGE WRITE 12: CLS
LOAD PNG "./IMAGES/WEAPONS.PNG",,,1


PSYCHED_BAR(1)

'RESET ARRAYS AND LOAD LEVEL MAP - NOT WHEN BACKING FROM A GAME OPTIONS
IF ON_OPTIONS=0 THEN
 RESET_ARRAYS: LOAD_MAP("W1M"+STR$(LEVEL))
ENDIF

PSYCHED_BAR(1)

'PLAY PAUSE
'FRAMEBUFFER CREATE 1538,390
'FRAMEBUFFER WRITE
'LOAD BMP "./IMAGES/wolf.bmp"
'PLAY RESUME

'SET SCREEN DETAIL
SCREEN_DETAIL(SC_SIZE,DETAIL)

'KEEP ON THIS LEVEL
NXT_LEVEL = 0 

'RESET KEYS - NOT WHEN BACKING FROM A GAME OPTIONS
IF ON_OPTIONS=0 THEN K_GOLD=0: K_BLUE=0

'REFRESH STATUS PANEL
STATUS = 1    

'RESET THE STATUS OF GAME OPTIONS PANEL
ON_OPTIONS = 0

'------------------------- START MAIN GAME LOOP --------------------------

DO WHILE NXT_LEVEL=0

 '-- MAIN CORE OF RAYCASTER --

 COSANG = COS(ANG)*0.8
 SINANG = SIN(ANG)*0.8

 COSVIS = COS(ANG+RAD(90))*0.8
 SINVIS = SIN(ANG+RAD(90))*0.8

 VXINC = SINANG * -2 / X_DIM
 VYINC = COSANG *  2 / X_DIM
 VX = (COSANG + SINANG)
 VY = (SINANG - COSANG)

 A_DIST=1: T_DIST=2: CNT=0

 PAGE WRITE 2

 'RAYCAST SCANNING
 FOR SX = A_SCAN TO B_SCAN STEP SIZE
 
  'RAYCAST IN 2D TO SEE WHAT BLOCK IS HIT, AND WHERE IT GETS HIT
  X_SCAN = INT(X_POS): XDIR = SGN(VX): X_INC = ABS(VX)
  Y_SCAN = INT(Y_POS): YDIR = SGN(VY): Y_INC = ABS(VY)
  IF XDIR > 0 THEN X_TEMP = 1 - (X_POS - X_SCAN) ELSE X_TEMP = X_POS - X_SCAN
  IF YDIR > 0 THEN Y_TEMP = 1 - (Y_POS - Y_SCAN) ELSE Y_TEMP = Y_POS - Y_SCAN

  D = X_TEMP * Y_INC - Y_TEMP * X_INC

  DO
   INC CNT

   IF D < 0 THEN
    INC X_SCAN,XDIR

    'WALLS
    IF MAPW(X_SCAN, Y_SCAN) THEN

     MAPSCAN=MAPW(X_SCAN,Y_SCAN)
     'IT'S A WALL?
     IF MAPSCAN <> 500 THEN
      DTX=0: SHAD=128
      HX = X_SCAN
      IF XDIR < 0 THEN
       INC HX
       HY = Y_POS + VY * (HX - X_POS) / VX
       BX = 63 - INT((HY - INT(HY)) * 64)
      ELSE
       HY = Y_POS + VY * (HX - X_POS) / VX
       BX = INT((HY - INT(HY)) * 64)
      ENDIF
      IF MAPS(X_SCAN,Y_SCAN)=2 THEN MAPSCAN=20 'DOOR SIDES
      'DOOR MASK
      IF MAPD(X_SCAN,Y_SCAN) THEN        
       DTX=64-ABS(MAPD(X_SCAN,Y_SCAN))
       IF BX>=DTX THEN EXIT DO
      ELSE
       EXIT DO
      ENDIF 'DOOR MASK
     ELSE
     'IT'S A OBJECT FLAG ON THE WALL MAP?
      INC MAXOBJ
      MAPW(X_SCAN,Y_SCAN)=0
      T_OBJ(MAXOBJ)=MAPO(X_SCAN,Y_SCAN): ACT_OBJ(MAXOBJ)=0
      X_OBJ(MAXOBJ)=X_SCAN+0.5: Y_OBJ(MAXOBJ)=Y_SCAN+0.5
     ENDIF 'MAPSCAN <> 500?

    ENDIF 'WALL

    INC D,Y_INC
   ELSE
    INC Y_SCAN,YDIR
 
    'WALLS
    IF MAPW(X_SCAN, Y_SCAN) THEN

     MAPSCAN=MAPW(X_SCAN,Y_SCAN)
     'IT'S A WALL?
     IF MAPSCAN <> 500 THEN
      DTX=0: SHAD=0  
      HY = Y_SCAN
      IF YDIR < 0 THEN
       INC HY
       HX = X_POS + VX * (HY - Y_POS) / VY
       BX = INT((HX - INT(HX)) * 64)
      ELSE
       HX = X_POS + VX * (HY - Y_POS) / VY
       BX = 63 - INT((HX - INT(HX)) * 64)
      ENDIF
      IF MAPS(X_SCAN,Y_SCAN)=1 THEN MAPSCAN=20 'DOOR SIDES
      'DOOR MASK
      IF MAPD(X_SCAN,Y_SCAN) THEN
       DTX=64-ABS(MAPD(X_SCAN,Y_SCAN))
       IF BX>=DTX THEN EXIT DO
      ELSE
       EXIT DO
      ENDIF 'DOOR MASK
     ELSE
     'IT'S A OBJECT FLAG ON THE WALL MAP?
      INC MAXOBJ
      MAPW(X_SCAN,Y_SCAN)=0
      T_OBJ(MAXOBJ)=MAPO(X_SCAN,Y_SCAN): ACT_OBJ(MAXOBJ)=0
      X_OBJ(MAXOBJ)=X_SCAN+0.5: Y_OBJ(MAXOBJ)=Y_SCAN+0.5
     ENDIF 'MAPSCAN <> 500?

    ENDIF 'WALL

    INC D,-X_INC
   END IF

  LOOP

  '-- DRAW WALL AND DOOR TEXTURES --

  BY = ( (INT(MAPSCAN)-1) << 6)

  'GET CORRECT X COORDINATE FOR TEXTURE READING
  XL=(BY + BX) MOD 1536

  'DISTANCE
  T_DIST = (COSANG * (HX-X_POS) + SINANG * (HY-Y_POS))/F_DIST

  'CUT TEXTURE AFTER A CLOSED DOOR / CUT IF WALL IS TOO FAR AWAY / CUT IF IT'S A OBJECT MARK
  IF NOT(DTX>(XL MOD 64) OR T_DIST<=1/64 OR MAPSCAN=500) THEN

   'WALL HEIGHT - CEILING AND FLOOR BORDERS
   SY1 = INT(B_Y_DIM-60/T_DIST)
   SY2 = INT(B_Y_DIM+60/T_DIST)

   'PERSPECTIVE CORRECTION OUTSIZE Y WINDOW
   IF SY1 < 0 THEN
    A_ADJY=ABS(SY1/(SY2-SY1))*36/(T_DIST): SY1 = 0
    B_ADJY=ABS((SY2-Y_DIM)/(SY2-SY1))*64/(T_DIST+0.1): SY2 = Y_DIM: IF B_ADJY>63 THEN B_ADJY=63
   ELSE
    A_ADJY=0: B_ADJY=0
   ENDIF

   'FAKE Z-BUFFER FOR OBJECTS
   Z_OBJ(SX\SIZE)=SY2+1
   Z_OBJ((SX+SIZE\2)\SIZE)=SY2+1

   TM = SIZE * T_DIST * 0.7
   IF (XL MOD 64)+TM > 64 THEN TM=(64-(XL MOD 64))
   IMAGE RESIZE_FAST XL-DTX,BY\1536+A_ADJY+SHAD, TM,64-B_ADJY, SX,SY1, SIZE,SY2-SY1,FRAMEBUFFER,0

  ENDIF 'CUT TEXTURE ENDIF

  INC VX,VXINC
  INC VY,VYINC

 NEXT SX

 'DEBUG MAP
 IF DEBUG=1 THEN
  PAGE WRITE 2
  BLIT 200,8,201,9,66,66,4,0
  PIXEL X_POS+200,Y_POS+8.5,RGB(0,255,0) 
 ENDIF

 'CALL THE RENDERER OF THE DISPONIBLE OBJECTS AND ENEMIES
 FOR OO=0 TO MAXENE
  'CUT ENEMIES WITH THE DISTANCE (BEFORE ROTATION) BUT CONTINUE IF A ENEMY SAW YOU
  IF SQR( (X_OBJ(OO)-X_POS)^2 + (Y_OBJ(OO)-Y_POS)^2 )>10 AND ACT_OBJ(OO)=0 THEN CONTINUE FOR
  IF DEBUG=1 THEN PIXEL X_OBJ(OO)+200,Y_OBJ(OO)+8,RGB(255,0,0)
  IF T_OBJ(OO)>=1000 THEN CONTROL_ENEMY(OO) ELSE DRAW_OBJECT(OO)
 NEXT OO

 'CALL THE RENDERER OF THE OBJECTS
 IF MAXOBJ>MAXENE THEN
  FOR OO=MAXOBJ TO MAXENE+1 STEP -1
   DRAW_OBJECT(OO)    
  NEXT OO
 ENDIF

 'TO ROTATE ENEMIES SEARCH PATH
 TC_VIEW=TC_VIEW+1: IF TC_VIEW>3 THEN TC_VIEW=0

 'KEYBOARD CONTROL CODE
 X_SPD=0: Y_SPD=0: SPD=0.35
 X_SPDX=0: Y_SPDY=0
 CTRL=0

 'READ MODIFIER KEYS
 T=KEYDOWN(7)
 MD$=RIGHT$("0000"+BIN$(T),4)
 'LCTRL - FIRE
 IF PEEK(VAR MD$,3)=49 AND ((AMMO>0 AND WEAPON>0) OR WEAPON=0) THEN  
  IF PLFIRE<2 AND FIRING=0 THEN
   
   CTRL=1
   SELECT CASE WEAPON
    CASE 0: 'KNIFE
     WSPR=-1: PLFIRE=2: FIRING=1
    CASE 1: 'PISTOL
     PLAY MODSAMPLE 31,1,64,22050: STATUS=1: PLFIRE=2: AMMO=AMMO-1: WSPR=-1: FIRING=1
    CASE 2: 'MACHINE GUN
     IF PLFIRE=0 THEN W_SW=1
     PLAY MODSAMPLE 30,1,64,22050: STATUS=1: PLFIRE=1: AMMO=AMMO-1: IF WSPR<1 THEN WSPR=0
    CASE 3: 'CHAIN GUN
     PLAY MODSAMPLE 29,1,64,22050: STATUS=1: PLFIRE=1: AMMO=AMMO-1: WSPR=-1
     IF PLFIRE=0 THEN W_SW=0
   END SELECT

  ENDIF
 ELSE
  FIRING=0
 ENDIF
 'LALT - STRAFE
 IF PEEK(VAR MD$,4)=49 THEN STRAFE=1 ELSE STRAFE=0
 'LSHIFT - RUN
 R=1.5
 IF PEEK(VAR MD$,1)=49 THEN SPD=0.70: R=4

 C_WEAPON=-1
 FOR T=1 TO 5
  K = KEYDOWN(T) 
  SELECT CASE K
   CASE 49:  C_WEAPON=0                                    'KNIFE
   CASE 50:  IF AMMO>0 THEN C_WEAPON=1                     'PISTOL
   CASE 51:  IF ON_WEAPON(2)=1 AND AMMO>0 THEN C_WEAPON=2  'MACHINE GUN
   CASE 52:  IF ON_WEAPON(3)=1 AND AMMO>0 THEN C_WEAPON=3  'CHAIN GUN
   CASE 130: IF STRAFE=0 THEN ANG = ANG - .1*R ELSE X_SPDX =  SPD: Y_SPDY = -SPD 'LEFT
   CASE 131: IF STRAFE=0 THEN ANG = ANG + .1*R ELSE X_SPDX = -SPD: Y_SPDY =  SPD 'RIGHT
   CASE 128: IF STRAFE=0 THEN X_SPD =  SPD: Y_SPD =  SPD 'FORWARD
   CASE 129: IF STRAFE=0 THEN X_SPD = -SPD: Y_SPD = -SPD 'BACKWARD
   CASE 32:  OPENDOOR=1 'SPACE - OPEN DOOR
   CASE 65:  STAGE_CLEAR(LEVEL+1) 'TEST STAGE COMPLETED
   CASE 27:  ON_OPTIONS=1: SCR_TYPE$="OPTIONS": GOTO GAME_OPTIONS
   CASE 149: 
    IF PRESSED=0 THEN
     PRESSED=1
     PLAY_SFX("ADLIB_SELECTED",0)
     SC_SIZE=SC_SIZE+21: IF SC_SIZE>100 THEN SC_SIZE=0
     SCREEN_DETAIL(SC_SIZE,DETAIL)
    ENDIF
   CASE 150: 
    IF PRESSED=0 THEN
     PRESSED=1
     PLAY_SFX("ADLIB_SELECTED",0)
     IF ZOOM=1 THEN ZOOM=0 ELSE ZOOM=1
     SCREEN_DETAIL(SC_SIZE,DETAIL)
    ENDIF
  END SELECT
 NEXT T

 'START THE OPENNING DOOR ANIMATION
 IF OPENDOOR=1 THEN
  FOR TD=1 TO 2
   SELECT CASE MAPW(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD))
    CASE 15    TO 16.50 : OPEN_DOOR(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD)) 'DOORS AND ELEVATOR DOORS
    CASE 17    TO 17.30 : IF K_GOLD=1 THEN OPEN_DOOR(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD)) 'GOLDEN KEY DOOR
    CASE 17.50 TO 17.76 : IF K_BLUE=1 THEN OPEN_DOOR(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD)) 'SILVER KEY DOOR
    CASE 18: PLAY_SFX("EXIT",100): PAUSE(750): STAGE_CLEAR(LEVEL+1) 'ELEVATOR SWITCH - STAGE CLEAR
   END SELECT
   'SECRET WALL
   IF MAPD(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD))=-64 THEN PUSH_WALL(INT(X_POS+COSANG*TD),INT(Y_POS+SINANG*TD))
  NEXT TD
 ENDIF

 'SCAN FOR DOOR ANIMATION
 FOR T=0 TO 4
  DOOR_ANIMATION(T)
 NEXT T

 'CHECK FOR PLAYER COLLISION WITH BLOCKS
 PLAYER_COLLISION

 'REMOVE WEAPON SHRINK AND WINDOW SIZE WHEN ZOOM IS ON
 TT=0: TTT=0
 IF ZOOM=1 THEN TT=F_DIST: TTT=WX_SIZE: WX_SIZE=0: F_DIST=1

 'CHANGE WEAPON
 IF C_WEAPON>=0 THEN
  IF C_WEAPON <> WEAPON THEN CHANGE_WEAPON(C_WEAPON)
 ENDIF

 'RESTORE WEAPON WHEN CHANGE DETAILS OR SET ZOOM
 IF PRESSED THEN CHANGE_WEAPON(WEAPON)

 'DRAW WEAPON
 T=(4-WSPR*2)
 IF PLFIRE>0 THEN
  T=(-WSPR*2)
  WSPR=WSPR+1
  IF WEAPON>=2 AND CTRL=1 AND AMMO>0 THEN
   WSPR=W_SW+1: T=0
   IF WEAPON=2 THEN PLFIRE=WSPR: WSPR=W_SW: T=-(6-WSPR*2) 'SLOWDOWN MACHINE GUN
  ELSE
   IF WSPR>1 THEN PLFIRE=1
   IF WSPR>3 THEN WSPR=3: PLFIRE=0: T=0
  ENDIF
 ENDIF
 IF WX_SIZE=0 THEN
  'BLIT (WSPR<<6),68-T,MM.HRES/2-32,MM.VRES/2+2,64,58+T,12,4
  BLIT WSPR*80,66-T,MM.HRES/2-36,MM.VRES/2-8,79,88+T,12,4
 ELSE
  'BLIT (WSPR<<6)*F_DIST,68-T*F_DIST,MM.HRES/2-32*F_DIST,MM.VRES/2-21+(24+T)*F_DIST-WX_SIZE/2,64*F_DIST,58+T*F_DIST,12,4
  BLIT WSPR*80*F_DIST,66-T*F_DIST,MM.HRES/2-36*F_DIST,MM.VRES/2-10*F_DIST-WX_SIZE/2,79*F_DIST,88+T*F_DIST,12,4
 ENDIF

 'RESTORE ELEMENTS AND WINDOWS SIZE FOR ALL OTHER ASPECTS WHEN ZOOM IS ON
 IF ZOOM=1 THEN F_DIST=TT: WX_SIZE=TTT

 'DISCARD SPACE KEY CONTINUOUSLY PRESSED 
 T=KEYDOWN(1)
 IF T<>32 THEN OPENDOOR=0
 IF T<149 OR T>150 THEN PRESSED=0

 'WINDOWED MODE - WRITE ON THE MAIN SCREEN
 PAGE WRITE 0

 'MOVING BJ HEAD EYES
 IF HEALTH>=0 THEN BJ_HEAD(HEALTH,HAPPY): IF HAPPY>0 THEN HAPPY=HAPPY-1
 IF HEALTH<0 THEN HEALTH=0

 'REFRESH STATUS BAR
 IF STATUS = 1 THEN REFRESH_STATUS_BAR

 'RED SCREEN WHEN PLAYER IS HURT
 IF RED_HURT=1 THEN
  PAGE WRITE 2
  BOX 8,4,MM.HRES-16,MM.VRES-48,0,,RGB(255,0,0) 
  PAGE WRITE 0
  RED_HURT=0
 ENDIF

 IF ZOOM=0 OR WX_SIZE=0 THEN
  'NOT ZOOMED WINDOW
  BLIT 8+WX_SIZE,4,8+WX_SIZE,4+WX_SIZE/2,MM.HRES-16-WX_SIZE*2,MM.VRES-48-WX_SIZE,2,0
 ELSE 
  'ZOOMED WINDOW
  PAGE WRITE 2
  IMAGE RESIZE_FAST 8+WX_SIZE,4,MM.HRES-16-WX_SIZE*2,MM.VRES-48-WX_SIZE,8,4,MM.HRES-16,MM.VRES-48,2,0
  BLIT (WSPR<<6),68-T,MM.HRES/2-32,MM.VRES/2,64,56+T,12,4
  PAGE WRITE 0
  BLIT 8,4,8,4,MM.HRES-16,MM.VRES-48,2,0
 ENDIF

 'FPS COUNTER
 T=TIMER-TIFPS
 TIFPS=TIMER

 'SHOW DEBUG INFORMATIONS
 IF DEBUG=1 OR S_FPS=1 THEN
  COLOR RGB(255,255,255),RGB(56,56,56)
  PRINT @(10,05,0) "FPS "+FORMAT$(1000/T,"%2.2f")     'FPS
  PRINT @(10,15,0) "GRF "+RIGHT$("0"+STR$(SIZE),2)    'RAYCAST SLICE SIZE (DETAIL)
  PRINT @(10,25,0) "OBJ "+RIGHT$("00"+STR$(MAXOBJ),3) 'NUMBER OF OBJECTS ON MAP
  PRINT @(10,35,0) "LPC "+RIGHT$("000"+STR$(CNT),4)   'NUMBER OF LOOPS INSIDE RAYCASTER

  'PRINT @(10,35,0) "WIN "+STR$(B_SCAN-A_SCAN) 
  'PRINT @(10,35,0) RIGHT$("BL0 "+STR$(MAPW(INT(X_POS+COSANG),INT(Y_POS+SINANG))),3) 'BLOCK IN FRONT
  'PRINT @(10,45,0) RIGHT$("BL1 "+STR$(MAPO(INT(X_POS+COSANG),INT(Y_POS+SINANG))),3) 'BLOCK IN FRONT
 ENDIF
 MAXOBJ=MAXENE

 'AUTO GRAPHICS DETAIL
 IF DETAIL<0 THEN
  IF 1000/T < 12+(WX_SIZE\40) THEN 
   SIZE=SIZE+2: IF SIZE>10 THEN SIZE=10
   X_DIM = (B_SCAN - A_SCAN)/SIZE
  ENDIF
  IF 1000/T > 16+(WX_SIZE\20) THEN
   SIZE=SIZE-2: IF SIZE<4 THEN SIZE=4
   X_DIM = (B_SCAN - A_SCAN)/SIZE
  ENDIF
 ENDIF
 
 PAGE COPY 0 TO 1,I

 PAGE WRITE 2
 FLOOR_CELLING(56,56,56,113,113,113)

 'GENERIC SWAPPER
 IF SW=0 THEN SW=1 ELSE SW=0

 'SWAPPER FOR WEAPON ANIMATION
 IF W_SW=0 THEN W_SW=1 ELSE W_SW=0

LOOP

GOTO LEVEL_START


     'DOOR MASK
     'IF MAPW(X_SCAN,Y_SCAN,2) THEN
     ' IF MAPW(X_SCAN,Y_SCAN,3)=-1 THEN
       'SECRET WALL
     '  HX = X_SCAN-(64-ABS(MAPW(X_SCAN,Y_SCAN,2)))/64
     '  IF XDIR < 0 THEN HX = HX + 1
     '  HY = Y_POS + VY * (HX - X_POS) / VX
     '  BX = INT( (HY - INT(HY)) * 64)     
     '  IF XDIR < 0 THEN BX = 63 - BX
     '  DRAW_TEXTURE: EXIT DO
     ' ELSE
     ' EXIT DO
     'ENDIF
